---
import { formatDistance } from "date-fns/formatDistance";

import Main from "../layouts/Main.astro";

import { InfoLabel } from "../components/ui/infoLabel";

import { CalendarIcon } from "@radix-ui/react-icons";
import { TagIcon } from "lucide-react";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

import "@/styles/nav.css";
import BaseHead from "../components/BaseHead.astro";

type Props = {
  children: any[];

  frontmatter?: {
    title: string;
    subTitle?: string;
    date?: string;
    modified?: string;
    tags?: string[];
    cover?: unknown;
    category?: string;
  };
};

const { title, subTitle, cover, category, date, modified, tags } =
  Astro.props.frontmatter! || Astro.props;

console.log("Main.astro", Astro.props);

const createdAgo = date ? formatDistance(new Date(date), new Date()) : "";

const modifiedAgo = modified
  ? formatDistance(new Date(modified), new Date())
  : "";
const modifiedDate = modified ? new Date(modified) : null;
// yyyy-MM-dd
const lastModified = modifiedDate
  ? modifiedDate.toISOString().split("T")[0]
  : "";
const publishedTime = date ? new Date(date).toISOString().split("T")[0] : "";
---
<Main>

<Fragment slot="head">
  <BaseHead title={title} description={`${subTitle}`} />
    {lastModified && <meta http-equiv="last-modified" content={lastModified} />}
    {
      publishedTime && (
        <meta property="article:published_time" content={publishedTime} />
      )
    }
</Fragment>

<Fragment name="page-header">
  {title && <h1>{title}</h1>}
  {subTitle && <h2>{subTitle}</h2>}
  {
    createdAgo ||
      (category && (
        <div class="info">
          <InfoLabel
            text={[
              `created ${createdAgo} ago`,
              `updated ${modifiedAgo} ago`,
            ]}
          >
            <CalendarIcon className="icon" />
          </InfoLabel>

          <InfoLabel text={category!}>
            <TagIcon className="icon" />
          </InfoLabel>
        </div>
      ))
  }

  {
    typeof cover === "object" && (
      <div class="hero-image">
        <Image
          src={cover as ImageMetadata}
          width="265"
          height="265"
          alt={title}
        />
      </div>
    )
  }
</Fragment>

<Fragment slot="default"></Fragment>

<Fragment name="page-footer">
</Fragment>

</Main>
